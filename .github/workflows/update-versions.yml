name: Update versions

on:
    workflow_run:
        workflows: [Create release, Create hotfix release]
        types:
            - completed

jobs:
    check-version-type:
        runs-on: ubuntu-latest
        if: github.event.workflow_run.conclusion == 'success'
        outputs:
            pre-release: ${{ steps.check-pre-release.outputs.pre-release }}
        steps:
            - name: Fetch from origin repo
              uses: actions/checkout@v3
              with:
                  ref: main # always fetch from main branch
                  fetch-depth: 0
                  token: ${{ secrets.GHACTIONS }}

            - name: Setup Node.js and Cache
              uses: ./.github/actions/nodejs

            - name: Check if pre release
              id: check-pre-release
              run: |
                  PRE_RELEASE=$(echo "${{ github.event.workflow_run.head_commit.message }}" | grep -e "-rc." -c) || :
                  if [ $PRE_RELEASE -eq 0 ]; then
                    echo "Not a pre-release, continuing..."
                  else
                    echo "Pre-release detected, skipping..."
                  fi
                  echo "::set-output name=pre-release::$PRE_RELEASE"

    update_versions:
        runs-on: ubuntu-latest
        needs: check-version-type
        if: needs.check-version-type.outputs.pre-release == 0
        steps:
            - name: Fetch from origin repo
              uses: actions/checkout@v3
              with:
                  ref: main # always fetch from main branch
                  fetch-depth: 0
                  token: ${{ secrets.GHACTIONS }}

            - name: Setup Node.js and Cache
              uses: ./.github/actions/nodejs

            - name: Wait for Netlify Deployment
              id: wait-for-deployment
              uses: probablyup/wait-for-netlify-action@3.2.0
              with:
                  site_id: ${{ secrets.NETLIFY_SITE_ID }}
              env:
                  NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}

            - name: Update versions.json
              uses: ./.github/actions/update-versions
              with:
                  url: ${{ steps.wait-for-deployment.outputs.url }}

            - name: Commit Changes
              run: |
                  VERSION=$(echo "${{ github.event.workflow_run.head_commit.message }}" | grep -E "v[0-9]+[^ ]+" -o)
                  git add .
                  git commit -m "chore(release): add $VERSION to versions.json [ci skip]" --no-verify
                  git push
