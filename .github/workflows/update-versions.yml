name: Update versions

on:
    workflow_run:
        workflows: [Create release, Create hotfix release]
        types:
            - completed

jobs:
    prepare:
        runs-on: ubuntu-latest
        if: github.event.workflow_run.conclusion == 'success'
        outputs:
            pre-release: ${{ steps.get-version.outputs.pre-release }}
            version: ${{ steps.get-version.outputs.version }}
            commit-sha: ${{ steps.get-last-commit.outputs.commit-sha }}
        steps:
            - name: Fetch from origin repo
              uses: actions/checkout@v3
              with:
                  ref: main # always fetch from main branch
                  fetch-depth: 0
                  token: ${{ secrets.GHACTIONS }}

            - name: Setup Node.js and Cache
              uses: ./.github/actions/nodejs

            - name: Check if pre release & get version
              id: get-version
              uses: ./.github/actions/get-version

            - name: Get last commit SHA
              id: get-last-commit
              run: echo "::set-output name=commit-sha::$(git rev-parse HEAD)"

    update-versions:
        runs-on: ubuntu-latest
        needs: prepare
        if: needs.prepare.outputs.pre-release == 'false'
        steps:
            - name: Fetch from origin repo
              uses: actions/checkout@v3
              with:
                  ref: main # always fetch from main branch
                  fetch-depth: 0
                  token: ${{ secrets.GHACTIONS }}

            - name: Setup Node.js and Cache
              uses: ./.github/actions/nodejs

            - name: Wait for Netlify Deployment
              id: wait-for-deployment
              uses: ./.github/actions/wait-for-netlify
              with:
                  site_id: ${{ secrets.NETLIFY_SITE_ID }}
                  commit_sha: ${{ needs.prepare.outputs.commit-sha }}
              env:
                  NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}

            - name: Update versions.json
              uses: ./.github/actions/update-versions
              with:
                  url: ${{ steps.wait-for-deployment.outputs.url }}

            - uses: ./.github/actions/set-up-git
              name: Set up git user
              with:
                  name: ${{ secrets.GH_NAME }}
                  email: ${{ secrets.GH_EMAIL }}

            - name: Commit Changes
              run: |
                  git add .
                  git commit -m "chore(release): add v${{ needs.prepare.outputs.version }} to versions.json [ci skip]" --no-verify
                  git push
