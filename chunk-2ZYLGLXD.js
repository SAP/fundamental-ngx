import{Me as Q,Ne as V,Oc as Y,Oe as X,Pc as K,Rc as q,ca as U,da as B,ea as x,ga as h,ha as N,la as g,qa as W,qe as z,re as S,se as G,te as J}from"./chunk-3PUO5XIS.js";import"./chunk-KV2IS7YZ.js";import"./chunk-PWJXQ6XM.js";import{$b as j,Eb as k,Na as d,P as R,Ta as u,Ub as e,Vb as D,Zb as O,_a as l,_b as L,ac as H,db as F,ib as f,sb as I,tb as A,tc as P,ub as M,va as T,vb as a,wb as t,x as w,xb as p,y as b,yd as C}from"./chunk-MIJHU6S6.js";function ae(n,o){if(n&1&&(a(0,"li",1),e(1),t()),n&2){let i=o.$implicit;f("value",i),d(),D(i)}}var m=class extends N{constructor(o){super(o),this.dataProvider=o,this.match("*")}},y=class extends m{constructor(o){super(new h(o))}},E=class extends m{constructor(o){super(new h(o))}},_=class{parse(o){if(U(o))return o;if(Array.isArray(o))return new y(o);if(b(o))return new E(o)}},$=(()=>{class n{constructor(i,r,c){this._destroyRef=i,this._cd=r,this.dataSourceDirective=c,this.arrayDataSource=new Array(20).fill(null).map((v,s)=>s),this.classDataSource=new Array(20).fill(null).map((v,s)=>s+10),this.currentData=[],this.dataSourceOptions=["array","observable","class"],this.currentDataSource="array",this.isLoading=!1}ngOnInit(){this.dataSourceDirective.dataSource=this.arrayDataSource,this.dataSourceDirective.dataChanged$.pipe(C(this._destroyRef)).subscribe(i=>{this.currentData=i,this._cd.detectChanges()}),this.dataSourceDirective.isLoading.pipe(C(this._destroyRef)).subscribe(i=>{this.isLoading=i,this._cd.detectChanges()})}changeDataSource(i){switch(i){case"array":this.dataSourceDirective.dataSource=this.arrayDataSource;break;case"observable":this.dataSourceDirective.dataSource=w(this.arrayDataSource).pipe(R(3e3));break;case"class":this.dataSourceDirective.dataSource=new m(new h(this.classDataSource));break}}static{this.\u0275fac=function(r){return new(r||n)(u(T),u(P),u(x))}}static{this.\u0275cmp=l({type:n,selectors:[["fdk-data-source-default-example"]],features:[H([{provide:B,useClass:_}]),F([{directive:x,inputs:["dataSource","dataSource"],outputs:["dataChanged","dataChanged"]}])],decls:11,vars:3,consts:[["placeholder","Select datasource",3,"valueChange","value"],["fd-option","",3,"value"]],template:function(r,c){r&1&&(a(0,"p"),e(1,"Current sata source:"),t(),a(2,"p"),e(3),t(),a(4,"p"),e(5,"Current data:"),t(),a(6,"p"),e(7),t(),a(8,"fd-select",0),j("valueChange",function(s){return L(c.currentDataSource,s)||(c.currentDataSource=s),s}),k("valueChange",function(s){return c.changeDataSource(s)}),A(9,ae,2,2,"li",1,I),t()),r&2&&(d(3),D(c.currentDataSource),d(4),D(c.isLoading?"Loading...":c.currentData),d(),O("value",c.currentDataSource),d(),M(c.dataSourceOptions))},dependencies:[q,K,Y],encapsulation:2,changeDetection:0})}}return n})();var ee=(()=>{class n{constructor(){this.dataSourceDefaultExample=[g("default/data-source-default-example.component.html"),g("default/data-source-default-example.component.ts",{component:"DataSourceDefaultExampleComponent",selector:"data-source-default-example"})]}static{this.\u0275fac=function(r){return new(r||n)}}static{this.\u0275cmp=l({type:n,selectors:[["app-data-source"]],decls:6,vars:1,consts:[["id","default","componentName","DataSource"],[3,"exampleFiles"]],template:function(r,c){r&1&&(a(0,"fd-docs-section-title",0),e(1," Data Source Standard Usage "),t(),p(2,"description"),a(3,"component-example"),p(4,"fdk-data-source-default-example"),t(),p(5,"code-example",1)),r&2&&(d(5),f("exampleFiles",c.dataSourceDefaultExample))},dependencies:[J,S,z,$,W],encapsulation:2})}}return n})();var te=(()=>{class n{static{this.\u0275fac=function(r){return new(r||n)}}static{this.\u0275cmp=l({type:n,selectors:[["app-data-source-header"]],decls:33,vars:0,consts:[["module","DataSourceModule","subPackage","data-source"]],template:function(r,c){r&1&&(a(0,"fd-doc-page")(1,"header"),e(2,"Data Source"),t(),a(3,"description")(4,"p")(5,"code"),e(6,"DataSourceDirective"),t(),e(7," is a standalone directive that includes most common logic when working with the data sources. "),t(),a(8,"p"),e(9," Since it's a standalone directive, users don't need to manually apply it to a desired component. This can be done with "),a(10,"code"),e(11,"hostDirectives"),t(),e(12," object of the "),a(13,"code"),e(14,"@Component"),t(),e(15," or "),a(16,"code"),e(17,"@Directive"),t(),e(18," decorator. "),t(),a(19,"p"),e(20," It handles opening and closing the data stream with the help of the class that implements "),a(21,"code"),e(22,"DataSourceParser"),t(),e(23," interface. "),t(),a(24,"p"),e(25,"This class can be provided via "),a(26,"code"),e(27,"FD_DATA_SOURCE_TRANSFORMER"),t(),e(28," Injection Token."),t(),a(29,"p"),e(30," Additionally, it will emit events when the data inside data provider has been changed, or the data source object has been changed completely. "),t()(),p(31,"import",0)(32,"fd-header-tabs"),t())},dependencies:[G,V,S,X,Q],encapsulation:2,changeDetection:0})}}return n})();var ge=[{path:"",component:te,data:{primary:!0},children:[{path:"",component:ee}]}],ye="data-source",Ee="dataSource";export{Ee as API_FILE_KEY,ye as LIBRARY_NAME,ge as ROUTES};
