import{Je as w,Ke as D,Le as M,bc as y,cc as g,ka as f,ne as v,oe as p,pe as C,qa as b,qe as E}from"./chunk-E4QTDQUJ.js";import"./chunk-TBIXCCYB.js";import"./chunk-4MOEUG6I.js";import{Fb as I,La as c,Vb as o,Xb as S,_a as a,jb as m,kb as d,tb as h,ub as u,vb as x,wb as i,xb as n,yb as r}from"./chunk-22TZQ2SX.js";function P(e,F){if(e&1&&(i(0,"div"),o(1),n()),e&2){let l=F.$implicit;d("height",30,"px"),c(),S(" ",l.label," ")}}var _=(()=>{class e{constructor(){this.displayedElements=[{label:"Initially shown element"},{label:"Initially shown element"},{label:"Initially shown element"},{label:"Initially shown element"},{label:"Initially shown element"}],this.data=[],this.dataSelector=0,this.increment=5}loadMoreElements(){this.dataSelector<this.data.length&&(this.displayedElements=this.displayedElements.concat(this.data.slice(this.dataSelector,this.dataSelector+this.increment)),this.dataSelector+=this.increment)}ngOnInit(){this.generateArray(1e3)}generateArray(l){for(let t=0;t<l;++t)this.data.push({label:"New element number: "+t})}static{this.\u0275fac=function(t){return new(t||e)}}static{this.\u0275cmp=a({type:e,selectors:[["fd-infinite-scroll-basic-example"]],decls:3,vars:11,consts:[["fdInfiniteScroll","",3,"onScrollAction","scrollPercent"],[3,"height"]],template:function(t,s){t&1&&(i(0,"div",0),I("onScrollAction",function(){return s.loadMoreElements()}),u(1,P,2,3,"div",1,h),n()),t&2&&(d("max-height",120,"px")("overflow-y","scroll")("border-width",1,"px")("border-style","solid")("border-color","black"),m("scrollPercent",80),c(),x(s.displayedElements))},dependencies:[g,y],encapsulation:2})}}return e})();var H="infinite-scroll-basic-example/infinite-scroll-basic-example.component.ts",N="infinite-scroll-basic-example/infinite-scroll-basic-example.component.html",A=(()=>{class e{constructor(){this.basicInfiniteExample=[{language:"html",code:f(N),fileName:"infinite-scroll-basic-example"},{language:"typescript",code:f(H),fileName:"infinite-scroll-basic-example",component:"InfiniteScrollBasicExampleComponent"}]}static{this.\u0275fac=function(t){return new(t||e)}}static{this.\u0275cmp=a({type:e,selectors:[["infinite-scroll-docs"]],decls:7,vars:1,consts:[["id","basic","componentName","infinite-scroll"],[3,"exampleFiles"]],template:function(t,s){t&1&&(i(0,"fd-docs-section-title",0),o(1," Basic Infinite Scroll "),n(),i(2,"description"),o(3,` It can be used with more than just fundamental-ngx components! The example below uses standard divs.
`),n(),i(4,"component-example"),r(5,"fd-infinite-scroll-basic-example"),n(),r(6,"code-example",1)),t&2&&(c(6),m("exampleFiles",s.basicInfiniteExample))},dependencies:[E,p,v,_,b],encapsulation:2})}}return e})();var B=(()=>{class e{static{this.\u0275fac=function(t){return new(t||e)}}static{this.\u0275cmp=a({type:e,selectors:[["app-infinite-scroll-header"]],decls:13,vars:0,consts:[["module","InfiniteScrollModule","subPackage","infinite-scroll"]],template:function(t,s){t&1&&(i(0,"fd-doc-page")(1,"header"),o(2,"Infinite Scroll"),n(),i(3,"description"),o(4," Infinite scroll is a generic "),i(5,"strong"),o(6,"directive"),n(),o(7," which can be used to load more elements as the user scrolls down a parent container. It is particularly useful when dealing with large lists which cannot be queried at the same time. This directive allows you to only query more elements when the scrolling reaches a certain point. "),r(8,"br")(9,"br"),o(10," Inside the ngOnInit method of the directive, an observable is created from the scroll event of the element which the directive is attached to. It then monitors the scrolling and emits an event when the inputted percentage value is reached. "),n(),r(11,"import",0)(12,"fd-header-tabs"),n())},dependencies:[C,D,p,M,w],encapsulation:2})}}return e})();var G=[{path:"",component:B,children:[{path:"",component:A}],data:{primary:!0}}],J="infinite-scroll",Q="infiniteScroll";export{Q as API_FILE_KEY,J as LIBRARY_NAME,G as ROUTES};
