@mixin fd-rtl {
    @at-root {
        [dir='rtl'] &,
        &[dir='rtl'] {
            @content;
        }
    }
}

@mixin fd-reset-spacing {
    margin: 0;
    padding: 0;
}

@mixin fd-reset {
    font-size: var(--sapFontSize);
    line-height: var(--sapContent_LineHeight);
    color: var(--sapTextColor);
    font-family: var(--sapFontFamily);
    font-weight: normal;
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    border: 0;

    &::before,
    &::after {
        box-sizing: inherit;
        font-size: inherit;
    }
}

@mixin fd-flex($direction: row) {
    display: flex;
    flex-direction: $direction;
    @content;
}

@mixin fd-ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin fd-flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
    @content;
}

@mixin fd-flex-justify-content-start {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    @content;
}

@mixin fd-flex-stretch {
    display: flex;
    justify-content: center;
    align-items: stretch;
}

@mixin fd-hover {
    &:hover,
    &.is-hover {
        @content;
    }
}

@mixin fd-focus() {
    &:focus,
    &.is-focus {
        z-index: 5;
        @content;
    }
}

// ACTIVE state (press and hold)
@mixin fd-active {
    &:active,
    &.is-active {
        @content;
    }
}

@mixin fd-fiori-focus($offset: -0.1875rem) {
    &:focus,
    &.is-focus {
        @if $offset !=0 {
            outline-offset: $offset;
        }

        outline-width: var(--sapContent_FocusWidth);
        outline-color: var(--sapContent_FocusColor);
        outline-style: var(--sapContent_FocusStyle);
        @content;
    }
}

@mixin fd-set-padding-left-after($left: 0) {
    &:after {
        padding-left: $left;
    }

    @include fd-rtl() {
        &:after {
            padding-right: $left;
            padding-left: 0;
        }
    }
}

@mixin fd-set-padding-right-before($right: 0) {
    &:before {
        padding-right: $right;
    }

    @include fd-rtl() {
        &:before {
            padding-right: 0;
            padding-left: $right;
        }
    }
}

@mixin fd-micro-process-flow-navigation-icon(
    $direction: previous,
    $icon-previous: '\e067',
    $icon-next: '\e066',
    $padding: 0.313rem
) {
    @if $direction==previous {
        &:before {
            content: $icon-previous;
        }

        @include fd-set-padding-right-before($padding);

        @include fd-rtl() {
            &:before {
                content: $icon-next;
            }
        }
    } @else {
        &:after {
            content: $icon-next;
        }

        @include fd-set-padding-left-after($padding);

        @include fd-rtl() {
            &:after {
                content: $icon-previous;
            }
        }
    }
}

@mixin fd-micro-process-flow-semantic-state {
    @each $state, $background in $fd-micro-process-flow-semantic-colors {
        &--#{$state} {
            .#{$block}__icon-container {
                background-color: map-get($background, default);
                border-color: map-get($background, default);

                .#{$block}__icon {
                    color: var(--sapContent_ContrastIconColor);
                }

                @include fd-hover {
                    background-color: map-get($background, hover);
                    border-color: map-get($background, hover);
                }

                @include fd-active {
                    background-color: var(--sapHighlightColor);
                    border-color: var(--sapHighlightColor);
                }
            }
        }
    }
}

@mixin fd-set-padding-left($left: 0) {
    padding-left: $left;

    @include fd-rtl() {
        padding-right: $left;
        padding-left: 0;
    }
}

@mixin fd-set-margin-left($left: 0) {
    margin-left: $left;

    @include fd-rtl() {
        margin-left: 0;
        margin-right: $left;
    }
}
