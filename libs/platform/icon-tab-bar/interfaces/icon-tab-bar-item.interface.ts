import { DragRef, Point } from '@angular/cdk/drag-drop';
import { Subject } from 'rxjs';
import { TabConfig } from './tab-config.interface';

export interface ElementChord {
    x: number;
    y: number;
    width: number;
    height: number;
}

/**
 * Extended TabConfig with special fields, that are calculated internally
 */
export interface IconTabBarItem extends TabConfig {
    /** order in the array */
    index: number;
    /*
     * unique key and hash map at the same time.
     * It is generated by parent uId(if it has parent and own index)
     * e.g If tab has uId 1 it means that tab is located in root array and has index #1
     * e.g If tab has uId 3.4 it means that tab is located as subTab inside tab with index #3 and has index #4
     */
    uId: string;
    /**
     * Calculated index of tab, that takes into account the level of nesting.
     *
     * E.g. items `1, 1.1, 1.1.1, 2` will get indexes `0, 1, 2, 3` accordingly
     */
    flatIndex: number;
    cssClasses: string[];
    /** This field is used in overflow mode. Determines whether particular tab should be hidden */
    hidden?: boolean;
    subItems?: IconTabBarItem[];
    /** Unique id of the parent tab, if current item is a subItem */
    parentUId?: string;
}

export interface IconTabBarDndItem {
    dndItemData: IconTabBarItem;
    previewClass: string[];
    dndHoveredClass: string[];
    dndSeparatorClass: string[];
    moved: Subject<Point>;
    released: Subject<void>;
    started: Subject<void>;
    dragRef: DragRef;
    isVertical: boolean;
    getElementCoordinates(): ElementChord;
    toggleHoveredStyles(force?: boolean): void;
    toggleSeparatorStyles(force?: boolean): void;
}

export interface IconTabBarDndList {
    changeDraggableState(draggable: boolean): void;
}
