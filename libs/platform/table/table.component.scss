@use '@angular/cdk';
@import 'fundamental-styles/dist/scrollbar';

@include cdk.a11y-visually-hidden();

$block: fdp-table;

$fd-block: fd-table;

$fd-table-border: 0.0625rem solid #e4e4e4;
$fd-table-border-var: var(--sapList_BorderWidth, 0.0625rem) solid var(--sapList_BorderColor, #e4e4e4);

$fd-table-header-color: #f2f2f2;
$fd-table-header-color-var: var(--sapList_HeaderBackground, #f2f2f2);

$fd-table-scrollbar-width: var(--fdScrollbar_Dimension);
$fd-table-scrollbar-width-with-border: calc(#{$fd-table-scrollbar-width} + var(--sapList_BorderWidth, 0.0625rem));

// TODO: remove hardcoded style after fundamental-styles version bump
.fd-table__cell--focusable[aria-selected='true']:after {
    border-color: var(--sapContent_FocusColor) !important;
}

// TODO: Remove after new fundamental-styles version release.
@mixin fd-compact-or-condensed() {
    @at-root {
        [class*='-condensed'] &:not([class*='-cozy']),
        [class*='-compact'] &:not([class*='-cozy']),
        &[class*='-condensed'],
        &[class*='-compact'] {
            @content;
        }
    }
}

@mixin fd-rtl {
    @at-root {
        [dir='rtl'] &,
        &[dir='rtl'] {
            @content;
        }
    }
}

@mixin fd-table-nested-cell-padding($levels: 20, $content-density-cozy: false, $include-expand: false) {
    $level-padding: 0.5rem;
    $second-level-padding: 1.5rem;
    $third-level-padding: 0.75rem;
    $fourth-level-padding: 1.25rem;
    $expand-padding: if($include-expand, if($content-density-cozy, 2.75rem, 2rem), 0);

    @for $i from 1 through $levels {
        &[data-nesting-level='#{$i}'] {
            @if $i == 1 {
                padding-left: $expand-padding;

                @include fd-rtl() {
                    padding-left: 0.5rem;
                    padding-right: $expand-padding;
                }
            } @else if $i == 2 {
                padding-left: $second-level-padding + $expand-padding;

                @include fd-rtl() {
                    padding-left: 0.5rem;
                    padding-right: $second-level-padding + $expand-padding;
                }
            } @else if $i == 3 {
                padding-left: $second-level-padding + $third-level-padding + $expand-padding;

                @include fd-rtl() {
                    padding-left: 0.5rem;
                    padding-right: $second-level-padding + $third-level-padding + $expand-padding;
                }
            } @else if $i == 4 {
                padding-left: $second-level-padding + $fourth-level-padding + $expand-padding;

                @include fd-rtl() {
                    padding-left: 0.5rem;
                    padding-right: $second-level-padding + $fourth-level-padding + $expand-padding;
                }
            } @else {
                padding-left: $second-level-padding +
                    $third-level-padding +
                    (($i - 3) * $level-padding) +
                    $expand-padding;

                @include fd-rtl() {
                    padding-left: 0.5rem;
                    padding-right: $second-level-padding + $third-level-padding + (($i - 3) * $level-padding) +
                        $expand-padding;
                }
            }
        }
    }
}

// End TODO

/** When actions are collapsed */
fdk-dynamic-portal {
    .fdp-table-toolbar-actions {
        display: flex;
        flex-direction: column;

        > *:not(:last-of-type) {
            margin-left: 0;
            margin-right: 0;
            margin-bottom: 0.25rem;
        }
    }
}

.#{$block} {
    display: block;
    @mixin fd-rtl {
        @at-root {
            [dir='rtl'] &,
            &[dir='rtl'] {
                @content;
            }
        }
    }

    /** When actions are not collapsed */
    .fdp-table-toolbar-actions {
        margin: 0;

        > *:not(:first-of-type) {
            margin-left: 0.5rem;
            @include fd-rtl() {
                margin-left: 0;
                margin-right: 0.5rem;
            }
        }
    }

    .#{$block}__body-table,
    .#{$block}__header-table,
    .#{$block}__body-hs-table {
        /** table-layout:fixed does not work with absolutely positioned cells instead we need to keep each cell with defined width */
        table-layout: auto;
        width: 100%;
        /** need to keep borders separate in order to align cells which are absolutely positioned */
        border-collapse: separate;
        border-spacing: 0;
    }

    .fd-table__body__focus-mock {
        position: absolute;
        top: var(--fdTable_Header_Cell_Height);
        left: 0;
        right: 0;
        bottom: 0;
        pointer-events: none;
        z-index: 5;
    }

    .fd-table__body:focus + .fd-table__body__focus-mock {
        outline-offset: -0.1875rem;
        outline-width: 0.0625rem;
        outline-width: var(--sapContent_FocusWidth, 0.0625rem);
        outline-color: #000;
        outline-color: var(--sapContent_FocusColor, #000);
        outline-style: dotted;
        outline-style: var(--sapContent_FocusStyle, dotted);
    }

    /** Fixes due to the absolute positioning */
    &.fd-table--tree,
    &.fd-table--group {
        .fd-table__body .fd-table__row {
            &,
            .fd-replace-indicator {
                height: 2.75rem;
                max-height: 2.75rem;
            }
        }

        &.fd-table--compact .fd-table__body .fd-table__row {
            &,
            .fd-replace-indicator {
                height: 2rem;
                max-height: 2rem;
            }
        }

        &.fd-table--condensed .fd-table__body .fd-table__row {
            &,
            .fd-replace-indicator {
                height: 1.563rem;
                max-height: 1.563rem;
            }
        }
    }

    /** Tree table Drag & Drop fixes due to the absolute positioning */
    &.fd-table--tree {
        .fd-table__body .fd-table__row {
            cursor: auto;

            &--draggable {
                &:hover {
                    cursor: grab;
                }

                &:active {
                    cursor: grabbing;
                }

                &.fd-dnd-on-drag {
                    &.fd-dnd-placeholder {
                        //padding-left: 2.8rem;

                        @include fd-rtl() {
                            padding-left: 0.5rem;
                        }
                    }

                    &:not(.fd-dnd-placeholder) {
                        .fdp-table__cell--selection {
                            top: 0;
                            transform: translate(-100%, 0);

                            @include fd-rtl() {
                                transform: translate(100%, 0);
                            }
                        }
                    }
                }
            }

            .fd-replace-indicator {
                top: auto;
            }

            .#{$fd-block}__text {
                white-space: nowrap;
            }
        }

        &.fd-table--condensed,
        &.fd-table--compact {
            .fd-table__row.fd-dnd-on-drag.fd-dnd-placeholder {
                padding-left: 2rem;

                @include fd-rtl() {
                    padding-left: 0.5rem;
                }
            }
        }
    }

    // In fundamental-styles there's a fix for the table row height in condensed mode, that includes absolute positioning for the checkbox
    // it's not needed here
    &.fd-table--condensed .fd-table__body .fd-table__cell--checkbox .fd-checkbox__label {
        position: relative;
        margin-top: 0;
    }

    &.#{$block}--no-outer-border {
        .#{$block}__header,
        .#{$block}__body,
        .#{$block}__body-hs {
            border-left: none;
            border-right: none;

            @include fd-rtl {
                border-left: none;
                border-right: none;

                .fd-table__cell:first-child {
                    border-right: none;
                }
            }
        }

        .#{$block}__header {
            .fd-table__cell {
                border-top: none;
            }
        }

        .#{$block}__body {
            border-bottom: none;
        }
    }

    &__container {
        position: relative;
        overflow: hidden;
        outline: none;
    }

    &__header {
        // is needed to have proper overflow for header cells with frozen columns
        z-index: 2;

        .fd-table__cell,
        .fd-table__cell--mock {
            border-top: $fd-table-border;
            border-top: $fd-table-border-var;
            border-bottom: $fd-table-border;
            border-bottom: $fd-table-border-var;
        }

        .fd-table__cell {
            margin-top: 0;
            max-height: 100%;
            top: 0;

            &--fixed {
                position: sticky;
            }

            .fd-table__popover--custom {
                display: none;
            }

            .fdp-table__navigation-indicator {
                opacity: 0;
                visibility: hidden;
            }
        }

        .fd-table__cell--truncate-txt {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            display: inline-block;
            vertical-align: text-bottom;
            max-width: 100%;
        }
    }

    &__body {
        &-hs {
            box-sizing: border-box;
            border-left: $fd-table-border;
            border-left: $fd-table-border-var;
            background: var(--fdScrollbar_Track_Color, #ffffff);
            padding-right: $fd-table-scrollbar-width;

            @include fd-rtl() {
                padding-right: 0;
                padding-left: $fd-table-scrollbar-width;
                border-left: none;
                border-right: $fd-table-border;
                border-right: $fd-table-border-var;
            }

            &-wrap {
                width: 100%;
                position: relative;
            }

            &-spacer {
                position: absolute;
                height: 1px;
                visibility: hidden;
            }
        }
    }

    &__empty {
        &-table-message {
            box-sizing: border-box;
            padding: 1rem;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: center;
            align-content: center;
            width: 100%;
        }

        .fd-table__cell {
            width: 100%;
        }

        .fd-table__body {
            border-left: none;

            @include fd-rtl() {
                border-left: $fd-table-border;
                border-left: $fd-table-border-var;
                border-right: none;
            }
        }

        &.fixed-height {
            background-color: #fff;
            background-color: var(--sapList_Background, #fff);
        }
    }

    .fd-table__cell {
        z-index: 0; // need so fixed cells are above not-fixed cells

        &--group {
            min-width: 100%;
            border-left: none;

            /**
                Due to the changed table-layout group row cell may looe it's top border.
                For example when previous (relatively to the group row) row columns tolal width < 100% of the table.
            */
            &::before {
                content: '';
                display: block;
                position: absolute;
                top: -0.0625rem;
                left: 0;
                right: 0;
                border-top: $fd-table-border;
                border-top: $fd-table-border-var;
            }
        }

        &--status-indicator {
            border-left: none;
            border-right: $fd-table-border;
            border-right: $fd-table-border-var;
            min-width: 0.375rem; // TODO: should be moved to styles

            @include fd-rtl {
                border-right: none;
            }
        }

        &--mock {
            &.fd-table__cell--mock-borderless {
                border-left: none !important;
                border-right: none !important;
            }
        }

        /** Temporary until column width can fit content */
        .fdp-table__navigation-indicator {
            margin: auto;
        }

        @include fd-rtl() {
            /** Because last child always a mock */
            &:nth-last-child(2):not(.#{$block}__cell--group) {
                border-left: $fd-table-border;
                border-left: $fd-table-border-var;
            }
        }
    }

    .fd-dnd-item {
        position: relative;
    }

    // TODO(d.stepanenko): styles below should be moved into fundamental-styles
    .fd-table__cell--fixed {
        position: sticky;
        display: table-cell;
        z-index: 1;
    }

    .fd-table__cell--checkbox fd-checkbox {
        // positioning checkbox in the middle of the cell
        display: flex;
        height: 100%;
        .fd-checkbox__label {
            align-self: center;
            margin: 0;
        }
    }

    .fd-table__expand-wrapper {
        display: flex;
        align-items: center;
    }
    // END TODO

    &__column-resizer {
        bottom: $fd-table-scrollbar-width-with-border;
    }

    &__cell--navigation {
        width: 4rem;
        min-width: 4rem;
        max-width: 4rem;
    }

    &__body-table {
        &.fd-table--pop-in {
            .fd-table__row--secondary {
                .fd-table__cell {
                    border-bottom: var(--sapList_BorderWidth) solid var(--sapList_BorderColor);
                }
            }

            .#{$block} {
                &__header {
                    .fd-table__cell {
                        .fd-table__text {
                            margin-bottom: 0;
                        }
                    }
                }
            }
        }
    }

    &__body--virtual-scroll {
        position: relative;
        background-color: var(--sapList_Background, #fff);

        .fd-table__body:not(:last-child) .fd-table__row:last-child .fd-table__cell {
            border-bottom-color: var(--sapList_BorderColor) !important;
        }

        .fd-table__body {
            position: static;

            &--scroll-mock {
                top: 0;
                right: 0;
                position: absolute;
                overflow-y: auto;
                z-index: 2;
            }
        }
    }

    &.fd-table--no-vertical-borders {
        .fd-table__cell--status-indicator {
            border-right-color: transparent;

            @include fd-rtl() {
                border-left-color: transparent;
            }
        }
    }

    &__growing-button {
        height: auto;
        &__title {
            font-weight: 700;
            margin: 0.813rem 0;
        }
        &__subtitle {
            padding-bottom: 0.875rem;
        }
    }

    &__growing-button-content {
        display: flex;
        justify-content: center;
        flex-direction: column;

        &--byline {
            > * {
                display: flex;
                flex-direction: column;
                width: 100%;
            }
        }
    }

    &.fdp-table--outer-scroll {
        .fd-toolbar {
            position: sticky;
            z-index: 10;
            top: 0;
        }

        .fdp-table__body.fd-scrollbar {
            overflow: visible;
        }

        .fdp-table__container {
            overflow: visible;
        }

        thead {
            position: sticky;
            top: 0;
        }

        &:has(.fd-toolbar) {
            thead {
                position: sticky;
                top: 2.75rem;
            }

            &:has(.is-compact) {
                thead {
                    position: sticky;
                    top: 2rem;
                }
            }
        }

        &:has(.fd-toolbar):has(.fd-toolbar--title) {
            thead {
                position: sticky;
                top: 2.75rem;
            }
        }
    }
}

.#{$block} {
    // TODO: Remove after new fundamental-styles version release.
    &.#{$fd-block}--tree,
    &.#{$fd-block}--group {
        .#{$fd-block}__body {
            .#{$fd-block}__cell {
                @include fd-table-nested-cell-padding(20, true, true);

                &--expand {
                    cursor: pointer;
                    white-space: nowrap;

                    @include fd-table-nested-cell-padding(20, true);
                }
            }
        }
    }

    @include fd-compact-or-condensed() {
        &.#{$fd-block}--tree,
        &.#{$fd-block}--group {
            .#{$fd-block}__body {
                .#{$fd-block}__cell {
                    @include fd-table-nested-cell-padding(20, false, true);

                    &--expand {
                        @include fd-table-nested-cell-padding(20, false);
                    }
                }
            }
        }
    }
    // End TODO
}

.fd-table__intersection-spy {
    position: relative;
}

.fdp-table--no-outer-border.fd-table--no-vertical-borders .fd-table__cell.is-last-child,
.fdp-table--no-outer-border.fd-table--no-vertical-borders .fd-table__cell:last-child {
    border-left-style: none;
}

th.fd-table__cell .fd-table__inner {
    font-weight: 700;
}
