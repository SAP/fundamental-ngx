.fdp-table {
    @mixin fd-rtl {
        @at-root {
            [dir='rtl'] &,
            &[dir='rtl'] {
                @content;
            }
        }
    }

    @mixin hide-scrollbar {
        /* Hide scrollbar for Chrome, Safari and Opera */
        &::-webkit-scrollbar {
            display: none;
        }

        /* Hide scrollbar for IE, Edge and Firefox */
        -ms-overflow-style: none;
        scrollbar-width: none;
    }

    @mixin fd-table-nested-cell-padding($levels: 0, $content-density-cozy: false, $include-expand: false) {
        $initial-padding: 1.5rem;
        $level-padding: 0.5rem;
        /* Padding on third level is unique and different for compact  condensed and cozy */
        $level-three-padding: if($content-density-cozy, 0.5rem, 0.75rem);
        $expand-padding: if(
            $include-expand,
            if($content-density-cozy, 2.75rem, 2rem),
            0
        );

        @for $i from 1 through $levels {
            &[data-nesting-level='#{$i}'] {
                @if $i == 1 {
                    padding-left: $initial-padding + $expand-padding;

                    @include fd-rtl() {
                        padding-left: 0.5rem;
                        padding-right: $initial-padding + $expand-padding;
                    }
                /** As we're started from 0 third level has index 2 */
                } @else if $i == 2  {
                    padding-left: $initial-padding + $level-three-padding + $expand-padding;

                    @include fd-rtl() {
                        padding-left: 0.5rem;
                        padding-right: $initial-padding + $level-three-padding + $expand-padding;
                    }
                } @else {
                    padding-left: $initial-padding + (($i - 2) * $level-padding) + $level-three-padding + $expand-padding;

                    @include fd-rtl() {
                        padding-left: 0.5rem;
                        padding-right: $initial-padding + (($i - 2) * $level-padding) + $level-three-padding + $expand-padding;
                    }
                }
            }
        }
    }

    .fdp-table__body-table,
    .fdp-table__header-table,
    .fdp-table__body-hs-table {
        // table-layout fixed does not work with absolutely positioned cells
        // instead we need to keep each cell with defined width
        table-layout: auto;
        width: 100%;
        // need to keep borders separate in order
        // to align cells which are absolutely positioned
        border-collapse: separate;
        border-spacing: 0;
    }

    .fd-table__body:focus {
        outline-offset: -0.1875rem;
        outline-width: 0.0625rem;
        outline-width: var(--sapContent_FocusWidth, 0.0625rem);
        outline-color: #000;
        outline-color: var(--sapContent_FocusColor, #000);
        outline-style: dotted;
        outline-style: var(--sapContent_FocusStyle, dotted);
    }

    .fd-table__body,
    .fd-table__header,
    .fd-table__row {
        border: none !important;
    }

    .fd-table__row,
    .fd-table__cell {
        height: 2.75rem;

        .fdp-table__cell--selection {
            min-width: 2.8rem;
            max-width: 2.8rem;
            padding: 0 !important;
        }
    }

    .fd-table__row {
        &.fd-dnd-on-drag {
            &.fd-dnd-placeholder {
                padding-left: 2.8rem;

                @include fd-rtl() {
                    padding-left: 0.5rem;
                }
            }

            &:not(.fd-dnd-placeholder) {
                .fdp-table__cell--selection {
                    top: 0;
                    transform: translate(-100%, 0);
                }
            }

            @include fd-rtl() {
                .fdp-table__cell--selection {
                    transform: translate(100%, 0);
                }
            }
        }

        /** Temporary style for navigation indicator until column width can fit content */
        .fdp-table__navigation-indicator {
            justify-content: flex-end;
            padding-right: 5px;

            [dir='rtl'] & {
                padding-left: 5px;
                padding-right: 0px;
            }
        }
    }

    .fd-table__cell {
        box-sizing: border-box;

        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;

        max-width: 200px;
        min-width: 200px;

        @include fd-table-nested-cell-padding(20, true);

        &.fdp-table__cell--tree-no-expand {
            @include fd-table-nested-cell-padding(20, true, true);
        }

        .fdp-table__cell--expand {
            cursor: pointer;
            display: inline-flex;
            justify-content: center;
            align-items: center;
            font-size: 0.75rem;
            color: #0854A0;
            color: var(--sapContent_IconColor, #0854A0);
            min-width: 2.75rem;
            max-width: 2.75rem;
        }
    }

    .fd-table__row,
    .fd-table__cell {
        height: 2.75rem;
        cursor: default;

        &[tabindex="-1"] {
            outline: none;
        }
    }

    &.fd-table--condensed  {
        .fd-table__row,
        .fd-table__cell {
            height: 1.563rem;
        }
    }

    &.fd-table--compact {
        .fd-table__row,
        .fd-table__cell {
            height: 2rem;
        }
    }

    &.fd-table--condensed,
    &.fd-table--compact {
        .fdp-table__cell--selection,
        .fdp-table__cell--expand {
            min-width: 2rem;
            max-width: 2rem;
        }

        .fd-table__row {
            &.fd-dnd-on-drag {
                &.fd-dnd-placeholder {
                    padding-left: 2rem;

                    @include fd-rtl() {
                        padding-left: 0.5rem;
                    }
                }
            }
        }

        .fd-table__cell {
            @include fd-table-nested-cell-padding(20);

            &.fdp-table__cell--tree-no-expand {
                @include fd-table-nested-cell-padding(20, false, true);
            }
        }
    }

    &.fdp-table--tree {
        .fd-table__body {
            .fd-table__cell {
                &[data-nesting-level='0'] {
                    padding-left: 0;

                    @include fd-rtl() {
                        padding-left: 0.5rem;
                        padding-right: 0;
                    }
                }

                &:hover {
                    cursor: grab;
                }

                &:active {
                    cursor: grabbing;
                }
            }
        }

        .fd-replace-indicator {
            top: auto;
        }

        .fd-table__row {
            .fd-replace-indicator {
                height: 2.75rem;
            }
        }

        &.fd-table--compact {
            .fd-replace-indicator {
                height: 2rem;
            }
        }

        &.fd-table--condensed {
            .fd-replace-indicator {
                height: 1.563rem;
            }
        }
    }

    .fdp-table__container {
        position: relative;
    }

    @mixin fdp-empty-scrollbar-block() {
        box-sizing: border-box;
        background-color: #f2f2f2;
        background-color: var(--sapList_HeaderBackground, #f2f2f2);
    }

    .fdp-table__header {
        position: relative;

        overflow: hidden;

        border: 0.0625rem solid #e4e4e4;
        border: var(--sapList_BorderWidth, 0.0625rem) solid var(--sapList_BorderColor, #e4e4e4);
        border-bottom: none;

        .fdp-table__scrollbar-mock {
            position: absolute;
            top: 0;
            right: 0;
            height: 100%;

            @include fdp-empty-scrollbar-block();

            @include fd-rtl() {
                right: auto;
                left: 0;
            }
        }

        @include fd-rtl() {
            padding-right: 0;

            .fdp-table__scrollbar-mock {
                right: auto;
                left: 0;
            }
        }

        .fd-table--fixed {
            overflow: hidden;
        }

        .fd-table__cell {
            border-bottom: none;
        }

        .fd-table__popover--custom {
            display: none;
        }

        .fdp-table__cell--has-menu {
            cursor: pointer;
        }
    }

    .fdp-table__body {
        position: relative;

        overflow: hidden;
        overflow-y: scroll;

        .fd-table--fixed {
            overflow: hidden;
            overflow-x: scroll;

            @include hide-scrollbar();
        }

        .fd-table__row:last-of-type {
            .fd-table__cell {
                border-bottom: 0;
            }
        }
    }

    .fdp-table__body,
    .fdp-table__body-hs {
        border: 0.0625rem solid #e4e4e4;
        border: var(--sapList_BorderWidth, 0.0625rem) solid var(--sapList_BorderColor, #e4e4e4);
    }

    .fdp-table__body-hs {
        position: relative;
        min-height: 0.5rem;
        overflow: scroll;

        border-top: none;

        &.fdp-table__body-hs--empty {
            position: absolute;
            bottom: 0;
            width: 100%;

            border-color: transparent;
        }

        .fdp-table__body-hs-spacer {
            position: absolute;
            height: 1px;
            visibility: hidden;
        }
    }

    .fdp-table__row--group {
        .fd-table__cell {
            width: 100%;
            min-width: 100%;
            padding-left: 0;
            padding-right: 0;
            border-right: none;
            background-color: #f2f2f2;
            background-color: var(--sapList_HeaderBackground, #f2f2f2);
        }
    }

    .fdp-table__empty-table {
        height: 100%;
    }

    .fd-table__empty-table-message {
        padding: 1rem;
        text-align: center;
    }

    .fd-dnd-item {
        position: inherit;
    }
}

/* Need to make it global cause this item is rendered in the overlay */
.fdp-table__item--clickable {
    cursor: pointer;
}
